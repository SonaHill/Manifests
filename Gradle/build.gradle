/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.6/samples
 */
//  https://www.youtube.com/watch?v=-dtcEMLNmn0
//https://github.com/sonatype-nexus-community/scan-gradle-plugin
plugins{
    id 'java'
    id 'org.sonatype.gradle.plugins.scan' version '2.8.2' // Update the version as needed
}

jar {
    manifest{
        attributes 'Main-Class': 'com.camerontownshend.GradleTutorial'
    }
}

repositories {
    // mavenCentral{
    //     url "http://nexusrepo:8081/repository/maven-public/"
    // }
        mavenCentral()
} 

nexusIQScan {
    username = 'xpkkNScZ' // Make sure to use an user with the role 'Application Evaluator' in the given IQ Server application
    password = 'MtLuJJkTCizGa7yf1I9rsFIKQnDlVQpb9qEM4SKhJZfs'
    serverUrl = 'http://iq-server:8070'
    applicationId = 'gradle-tutorial'
    // organizationId = '86b21e9659c14025ad908c4e6ac9415b' // Optional. If provided, a validation will be done to check if the given application ID exists under the organization ID (please note this is different than the organization name). If the application doesn't exists, then it will be created under the organization.
    stage = 'build' // build is used if omitted
    allConfigurations = false // if true includes the dependencies in all resolvable configurations. By default is false, meaning only 'compileClasspath', 'runtimeClasspath', 'releaseCompileClasspath' and 'releaseRuntimeClasspath' are considered
    resultFilePath = 'results.json' // Optional. JSON file containing results of the evaluation
    // modulesExcluded = ['module-1', 'module-2'] // Optional. For multi-module projects, the names of the sub-modules to exclude from scanning and evaluation.
    // dirExcludes = 'some-ant-pattern' // Optional. Comma separated ant-like glob patterns to select directories/archives that should be excluded. For Android projects we suggest using '**/classes.jar,**/annotations.zip,**/lint.jar,**/internal_impl-*.jar'
    // dirIncludes = 'some-ant-pattern' // Optional. Comma separated ant-like glob patterns to select directories/archives that should be examined

    // For projects using multiple custom variants for the release distribution, a Map can be set with the attributes names and values to match the specific variant. See more at the section "How to Deal with Multiple Release Variants" below in this doc.
    // variantAttributes = ['com.android.build.api.attributes.ProductFlavor:version': 'prod', 'other.attribute': 'other value'] // Optional, use it only when the plugin can't match a variant on its own
    // scanTargets = ['package-lock.json', '**/*.lock'] // Optional. Ant-like glob patterns for relative paths (to the project's folder) to select additional files to be scanned and evaluated.
    excludeCompileOnly = true // if true then dependencies under the 'compileOnly' configuration will be ignored. By default is false.
}


dependencies{
    // https://www.baeldung.com/gradle-dependency-management
    compileOnly group: 'org.apache.struts', name: 'struts2-core', version: '2.5.17'
    implementation group:'org.springframework.boot', name: 'spring-boot-starter', version: '2.3.4.RELEASE'
    runtimeOnly group: 'org.springframework', name: 'spring-core', version: '2.5'

    // api group: 'org.asciidoctor', name: 'asciidoctorj', version: '2.5.10'
    // compileOnlyApi group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.5'
    testCompileOnly group: 'org.yaml', name: 'snakeyaml', version: '1.33'
    testImplementation group:'junit', name: 'junit', version: '4.13.2'    
    testRuntimeOnly group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
}